// Generated by CoffeeScript 1.7.1
(function() {
  var lexer, toString;

  lexer = {
    name: 'lexer',
    version: 1
  };

  if (typeof module !== "undefined" && module !== null ? module.exports : void 0) {
    module.exports = lexer;
  }

  this.lexer = lexer;

  toString = Object.prototype.toString;

  lexer.whitelist = {
    text: 1,
    metion: 1
  };

  lexer.util = {};

  lexer.custom = {};

  lexer.stringify = function(data) {
    if (toString.call !== '[object Array]') {
      data = [data];
    }
    return data.map(function(d) {
      var type, _ref, _stringifier;
      type = d.type;
      if (!lexer.whitelist[type]) {
        return '';
      }
      _stringifier = ((_ref = lexer.custom[type]) != null ? _ref.stringify : void 0) || lexer._stringifier;
      return _stringifier(d);
    }).join('');
  };

  lexer.parse = function(str) {};

  lexer._stringifier = function(obj) {
    var data, dataProps, k, str, text, type, v;
    type = obj.type, text = obj.text, data = obj.data;
    str = '';
    if (type === 'text') {
      str = text;
    } else {
      data || (data = {});
      dataProps = (function() {
        var _results;
        _results = [];
        for (k in data) {
          v = data[k];
          _results.push("data-" + k + "=\"" + v + "\"");
        }
        return _results;
      })();
      str = "<" + type + " " + (dataProps.join(' ')) + ">" + text + "</" + type + ">";
    }
    return str;
  };

  lexer._parser = function(str) {};

}).call(this);
