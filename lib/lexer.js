// Generated by CoffeeScript 1.8.0
(function() {
  var Lexer, lexer, parser, stringifier, toString, whitelist;

  toString = Object.prototype.toString;

  whitelist = require('./whitelist');

  parser = require('./parser');

  stringifier = require('./stringifier');

  Lexer = (function() {
    function Lexer(structure) {
      this.structure = structure;
      if (toString.call(this.structure) !== '[object Array]') {
        this.structure = [this.structure];
      }
    }

    Lexer.prototype.html = function() {
      return lexer.stringifier.toHtml(this.structure);
    };

    Lexer.prototype.text = function() {
      return lexer.stringifier.toText(this.structure);
    };

    Lexer.prototype.toJSON = function() {
      return this.structure;
    };

    Lexer.prototype.isValid = function() {
      return this.structure.every(function(obj) {
        return toString.call(obj) === '[object String]' || lexer.whitelist[obj != null ? obj.type : void 0];
      });
    };

    return Lexer;

  })();

  lexer = function(structure) {
    return new Lexer(structure);
  };

  lexer.name = 'lexer';

  lexer.version = 1;

  lexer.whitelist = whitelist;

  lexer.parser = parser;

  lexer.stringifier = stringifier;

  lexer.createElement = function(type, text, props) {
    var ele, k, v;
    if (!whitelist[type]) {
      return text;
    }
    ele = {
      type: type,
      text: text
    };
    for (k in props) {
      v = props[k];
      ele[k] = v;
    }
    return ele;
  };

  lexer.parseDOM = function() {
    var structure;
    structure = lexer.parser.parseDOM.apply(lexer.parser, arguments);
    return new Lexer(structure);
  };

  module.exports = lexer;

  if (typeof window !== "undefined" && window !== null) {
    window.lexer = lexer;
  }

}).call(this);
